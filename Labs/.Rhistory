help(RDS)
help("read_rds")
file.exists(here("data", "kidiq.RDS"))
getwd()
file.exists(here("Labs", data", "kidiq.RDS"))
file.exists("Lab1.pdf")
file.exists("data/Kidiq.RDS")
kidiq <- read_rds(here("data", "Kidiq.RDS"))
kidiq <- read_rds("data/Kidiq.RDS")
kidiq
kidiq <- read_rds("data/Kidiq.RDS")
head(kidiq)
dim(kidiq)
kidiq |>
ggplot(aes(mom_iq, kid_score)) +
geom_point() +
labs(title = "Kid Score Versus Mon IQ", x = "Mom IQ", y = "Kid Score")
kidiq |>
ggplot(aes(mom_age, kid_score)) +
geom_point() +
labs(title = "Kid Score Versus Mon Age", x = "Mom Age", y = "Kid Score")
table(mom_hs)
kid <- read_rds("data/Kidiq.RDS")
head(kid)
kid |>
ggplot(aes(mom_iq, kid_score)) +
geom_point() +
labs(title = "Kid Score Versus Mon IQ", x = "Mom IQ", y = "Kid Score")
table(kid$mom_hs)
kid |>
group_by(mom_age) |>
summarise(avg_kid_score = mean(kid_score)) |>
ggplot(aes(x=avg_kid_score, y=mom_age)) +
geom_bar(stat = "identity") +
labs(title = "Average Kid Score by Mom Age",
x = "Average Kid Score", y = "Mom Age") +
theme_minimal()
table(kid$mom_age)
kid |>
group_by(mom_age) |>
summarise(avg_kid_score = mean(kid_score)) |>
ggplot(aes(x=mom_age, y=avg_kid_score)) +
geom_bar(stat = "identity") +
labs(title = "Average Kid Score by Mom Age",
x = "Average Kid Score", y = "Mom Age") +
theme_minimal()
help(geom_bar)
kid |>
group_by(mom_age) |>
summarise(avg_kid_score = mean(kid_score)) |>
ggplot(aes(x=avg_kid_score, y=mom_age)) +
geom_bar(stat = "identity", orientation = 'x') +
labs(title = "Average Kid Score by Mom Age",
x = "Average Kid Score", y = "Mom Age") +
theme_minimal()
kid |>
group_by(mom_age) |>
summarise(avg_kid_score = mean(kid_score)) |>
ggplot(aes(x=avg_kid_score, y=mom_age)) +
geom_bar(stat = "identity", orientation = 'y') +
labs(title = "Average Kid Score by Mom Age",
x = "Average Kid Score", y = "Mom Age") +
theme_minimal()
kid |>
group_by(mom_hs) |>
summarise(avg_kid_score = mean(kid_score)) |>
ggplot(aes(x=avg_kid_score, y=mom_hs)) +
geom_bar(stat = "identity", orientation = 'y') +
labs(title = "Average Kid Score by Mom HS",
x = "Average Kid Score", y = "Mom HS") +
theme_minimal()
kid |>
group_by(mom_hs) |>
summarise(avg_kid_score = mean(kid_score)) |>
ggplot(aes(x=avg_kid_score, y=mom_hs)) +
geom_boxplot() +
labs(title = "Average Kid Score by Mom HS",
x = "Average Kid Score", y = "Mom HS") +
theme_minimal()
help("geom_boxplot")
kid |>
group_by(mom_hs) |>
summarise(avg_kid_score = mean(kid_score)) |>
ggplot(aes(x=avg_kid_score, y=mom_hs)) +
geom_boxplot(orientation = 'y) +
labs(title = "Average Kid Score by Mom HS",
x = "Average Kid Score", y = "Mom HS") +
theme_minimal()
kid |>
group_by(mom_hs) |>
summarise(avg_kid_score = mean(kid_score)) |>
ggplot(aes(x=avg_kid_score, y=mom_hs)) +
geom_boxplot(orientation = 'y') +
labs(title = "Average Kid Score by Mom HS",
x = "Average Kid Score", y = "Mom HS") +
theme_minimal()
kid |>
group_by(mom_hs) |>
summarise(avg_kid_score = mean(kid_score)) |>
ggplot(aes(x=avg_kid_score, y=mom_hs)) +
geom_boxplot(stat = "boxplot", orientation = 'y') +
labs(title = "Average Kid Score by Mom HS",
x = "Average Kid Score", y = "Mom HS") +
theme_minimal()
kid |>
group_by(mom_hs) |>
summarise(avg_kid_score = mean(kid_score)) |>
ggplot(aes(x=avg_kid_score, y=mom_hs)) +
geom_boxplot(orientation = "horizontal") +
labs(title = "Average Kid Score by Mom HS",
x = "Average Kid Score", y = "Mom HS") +
theme_minimal()
kid |>
group_by(mom_hs) |>
summarise(avg_kid_score = mean(kid_score)) |>
ggplot(aes(x=avg_kid_score, y=mom_hs)) +
geom_boxplot(orientation = "y") +
labs(title = "Average Kid Score by Mom HS",
x = "Average Kid Score", y = "Mom HS") +
theme_minimal()
kid |>
group_by(as.factor(mom_hs)) |>
summarise(avg_kid_score = mean(kid_score)) |>
ggplot(aes(x=avg_kid_score, y=mom_hs)) +
geom_boxplot(orientation = "y") +
labs(title = "Average Kid Score by Mom HS",
x = "Average Kid Score", y = "Mom HS") +
theme_minimal()
kid$mom_hs <- as.factor(kid$mom_hs)
kid |>
group_by(mom_hs) |>
summarise(avg_kid_score = mean(kid_score)) |>
ggplot(aes(x=avg_kid_score, y=mom_hs)) +
geom_boxplot(orientation = "y") +
labs(title = "Average Kid Score by Mom HS",
x = "Average Kid Score", y = "Mom HS") +
theme_minimal()
kid$mom_hs <- as.factor(kid$mom_hs)
kid |>
group_by(mom_hs) |>
summarise(avg_kid_score = mean(kid_score)) |>
ggplot(aes(x=avg_kid_score, y=mom_hs)) +
geom_boxplot(orientation = "x") +
labs(title = "Average Kid Score by Mom HS",
x = "Average Kid Score", y = "Mom HS") +
theme_minimal()
kid |>
group_by(mom_hs) |>
summarise(avg_kid_score = mean(kid_score)) |>
ggplot(aes(x=avg_kid_score, y=mom_hs)) +
geom_bar(stat = "identity", orientation = 'y') +
labs(title = "Average Kid Score by Mom HS",
x = "Average Kid Score", y = "Mom HS") +
theme_minimal()
kid |>
ggplot(aes(kid_score)) +
geom_histogram(binwidth = 5, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution of Kid Scores", x = "Kid Scores", y = "Density")
kid |>
ggplot(aes(kid_score)) +
geom_histogram(binwidth = 5, fill = "grey", color = "black", alpha = 0.7) +
labs(title = "Distribution of Kid Scores", x = "Kid Scores", y = "Density")
kid |>
ggplot(aes(kid_score)) +
geom_histogram(binwidth = 5, fill = "grey", color = "black", alpha = 0.7) +
labs(title = "Distribution of Kid Scores", x = "Kid Scores", y = "Density") +
theme_minimal()
kid |>
ggplot(aes(mom_iq, kid_score)) +
geom_point() +
labs(title = "Kid Score Versus Mon IQ", x = "Mom IQ", y = "Kid Score") +
theme_minimal()
kid |>
group_by(mom_hs) |>
summarise(avg_kid_score = mean(kid_score)) |>
ggplot(aes(x=avg_kid_score, y=mom_hs)) +
geom_bar(stat = "identity", orientation = 'y') +
labs(title = "Average Kid Score by Mom HS",
x = "Average Kid Score", y = "Mom HS") +
theme_minimal()
fit <- stan(file = here("code/models/kids2.stan"),
data = data,
chains = 3,
iter = 500)
setwd("~/winter2024/Applied Stats II/STA2201/Labs")
fit <- stan(file = here("code/models/kids2.stan"),
data = data,
chains = 3,
iter = 500)
getwd()
fit <- stan(file = here("Labs/code/models/kids2.stan"),
data = data,
chains = 3,
iter = 500)
help("stan")
fit <- stan(file = "code/models/kids2.stan"),
fit <- stan(file = "code/models/kids2.stan")
data = data,
fit <- stan(file = "code/models/kids2.stan",
data = data,
chains = 3,
iter = 500)
help(read_RDS)
help(read_rds)
colSums(is.na(kid))
dim(kid[complete.cases(kid), ])
dim(kid)
help("stan")
fit <- stan(file = "code/models/kids2.stan",
data = data,
chains = 3,
iter = 500)
kid <- read_rds("data/Kidiq.RDS")
head(kid)
y <- kid$kid_score
mu0 <- 80
sigma0 <- 0.1
# named list to input for stan function
data <- list(y = y,
N = length(y),
mu0 = mu0,
sigma0 = sigma0)
fit <- stan(file = "code/models/kids2.stan",
data = data,
chains = 3,
iter = 500)
print(fit)
dsamples <- fit |>
gather_draws(mu, sigma) # gather = long format
dsamples |>
filter(.variable == "mu") |>
ggplot(aes(.value, color = "posterior")) +
geom_density(size = 1) +
xlim(c(70, 100)) +
stat_function(fun = dnorm,
args = list(mean = mu0,
sd = sigma0),
aes(colour = 'prior'), size = 1) +
scale_color_manual(name = "", values = c("prior" = "red", "posterior" = "black")) +
ggtitle("Prior and posterior for mean test scores") +
xlab("score")
X <- as.matrix(kidiq$mom_hs, ncol = 1) # force this to be a matrix
K <- 1
data <- list(y = y,
N = length(y),
X = X,
K = K)
fit2 <- stan(file = here("code/models/kids3.stan"),
data = data,
iter = 1000)
X <- as.matrix(kidiq$mom_hs, ncol = 1) # force this to be a matrix
K <- 1
data <- list(y = y,
N = length(y),
X = X,
K = K)
fit2 <- stan(file = here("code/models/kids3.stan"),
data = data,
iter = 1000)
getwd()
---
title: "Lab 5"
kid <- read_rds("data/Kidiq.RDS")
head(kid)
y <- kid$kid_score
mu0 <- 80
sigma0 <- 0.1
# named list to input for stan function
data <- list(y = y,
N = length(y),
mu0 = mu0,
sigma0 = sigma0)
fit <- stan(file = "code/models/kids2.stan",
data = data,
chains = 3,
iter = 500)
print(fit)
X <- as.matrix(kidiq$mom_hs, ncol = 1) # force this to be a matrix
K <- 1
data <- list(y = y,
N = length(y),
X = X,
K = K)
fit2 <- stan(file = here("code/models/kids3.stan"),
data = data,
iter = 1000)
X <- as.matrix(kidiq$mom_hs, ncol = 1) # force this to be a matrix
K <- 1
data <- list(y = y,
N = length(y),
X = X,
K = K)
fit2 <- stan(file = "code/models/kids3.stan",
data = data,
iter = 1000)
print(fit2)
head(kids)
head(kid)
lm <- lm(kid_score ~ mom_hs, data=kid)
summary(lm)
lm$residuals
sum(lm$residuals^2)
sum(lm$residuals^2) / (length(y) - 2)
sqrt(sum(lm$residuals^2) / (length(y) - 2))
sqrt(sum(lm$residuals^2) / (length(y) - 2))
sigma_2 <- sqrt(sum(lm$residuals^2) / (length(y) - 2))
sigma_2
pairs(fit, pars = c("alpha", "beta[1]"))
pairs(fit2, pars = c("alpha", "beta[1]"))
mom_iq_centered <- kid$mom_iq - mean(kid$mom_iq)
X <- as.matrix(kid[, c("mom_hs", "mom_iq_centered")])
kid$mom_iq_centered <- kid$mom_iq - mean(kid$mom_iq)
X <- as.matrix(kid[, c("mom_hs", "mom_iq_centered")])
K <- 2
data3 <- list(y = y,
N = length(y),
X = X,
K = K
)
fit3 <- stan(file = "code/models/kids3.stan",
data = data3,
iter = 1000)
print(fit3)
mean(kid$mom_iq)
hist(kid$mom_iq)
lm <- lm(kid_score ~ mom_hs + mom_iq_centered, data=kid)
summary(lm)
head(kid)
posterior_samples <- extract(fit3)
posterior_samples$alpha
posterior_samples$beta
as.data.frame(fit3)
mean(kid$mom_iq)
filtered_data <- subset(posterior_samples, mom_iq_centered == 110 - mean(kid$mom_iq))
ggplot(filtered_data, aes(x = mom_hs, y = alpha + beta_hs * mom_hs)) +
geom_point() +
geom_line(aes(y = mean(alpha + beta_hs * mom_hs)), color = "red") +
labs(title = "Posterior Estimates of Scores by Education (IQ = 110)",
x = "Education (0 = No HS, 1 = HS)", y = "Scores")
filtered_data <- subset(posterior_samples, mom_iq_centered == 110 - mean(kid$mom_iq))
print(fit3)
posterior_samples[posterior_samples$mom_iq == 110, ]
dim(posterior_samples)
# Assuming you have fitted the model with 'fit'
posterior_samples <- as.data.frame(fit3)
dim(posterior_samples)
head(posterior_samples)
filtered_data <- subset(posterior_samples, mom_iq_centered == 110 - mean(kid$mom_iq))
filtered_data <- subset(posterior_samples, mom_iq_centered == 110 - mean(kid$mom_iq))
ggplot(filtered_data, aes(x = mom_hs, y = alpha + beta_hs * mom_hs)) +
geom_point() +
geom_line(aes(y = mean(alpha + beta_hs * mom_hs)), color = "red") +
labs(title = "Posterior Estimates of Scores by Education (IQ = 110)",
x = "Education (0 = No HS, 1 = HS)", y = "Scores")
dim(posterior_samples)
dim(kid)
dim(as.data.frame(fit2))
dim(as.data.frame(fit1))
dim(as.data.frame(fit))
posterior_samples <- as.data.frame(fit3)
posterior_scores_hs0 <- posterior_samples$alpha + posterior_samples$`beta[1]` * 0 +
posterior_samples$`beta[2]` * (110 - mean(kid$mom_iq))
posterior_scores_hs1 <- posterior_samples$alpha + posterior_samples$`beta[1]` * 1 +
posterior_samples$`beta[2]` * (110 - mean(kid$mom_iq))
posterior_samples <- as.data.frame(fit3)
posterior_scores_hs0 <- posterior_samples$alpha + posterior_samples$`beta[1]` * 0 +
posterior_samples$`beta[2]` * (110 - mean(kid$mom_iq))
posterior_scores_hs1 <- posterior_samples$alpha + posterior_samples$`beta[1]` * 1 +
posterior_samples$`beta[2]` * (110 - mean(kid$mom_iq))
# Assuming 'posterior_samples', 'posterior_scores_hs0', and 'posterior_scores_hs1' are defined
# Calculate kernel density estimates
density_hs0 <- density(posterior_scores_hs0)
density_hs1 <- density(posterior_scores_hs1)
# Plot density plots
plot(density_hs0, main = "Density Plots of Posterior Scores by Education (IQ = 110)",
xlim = range(c(density_hs0$x, density_hs1$x)),
ylim = range(c(density_hs0$y, density_hs1$y)),
xlab = "Scores", ylab = "Density", col = "blue", lwd = 2, type = "l",
lty = 1, bty = "n")
lines(density_hs1$x, density_hs1$y, col = "red", lwd = 2, lty = 1)
legend("topright", legend = c("Education = 0", "Education = 1"),
col = c("blue", "red"), lty = 1, lwd = 2)
# producing posterior samples
posterior_samples <- as.data.frame(fit3)
# producing posterior the estimates of scores by education
posterior_scores_hs0 <- posterior_samples$alpha + posterior_samples$`beta[1]` * 0 +
posterior_samples$`beta[2]` * (110 - mean(kid$mom_iq))
posterior_scores_hs1 <- posterior_samples$alpha + posterior_samples$`beta[1]` * 1 +
posterior_samples$`beta[2]` * (110 - mean(kid$mom_iq))
# plotting the estimates of scores
density_data <- data.frame(
Scores = c(posterior_scores_hs0, posterior_scores_hs1),
Education = rep(c(0, 1), each = length(posterior_scores_hs0))
)
ggplot(density_data, aes(x = Scores, fill = Education)) +
geom_density(alpha = 0.5) +
labs(title = "Density Plots of Posterior Scores by Education (IQ = 110)",
x = "Scores", y = "Density") +
scale_fill_manual(values = c("blue", "red"))
# producing posterior samples
posterior_samples <- as.data.frame(fit3)
# producing posterior the estimates of scores by education
posterior_scores_hs0 <- posterior_samples$alpha + posterior_samples$`beta[1]` * 0 +
posterior_samples$`beta[2]` * (110 - mean(kid$mom_iq))
posterior_scores_hs1 <- posterior_samples$alpha + posterior_samples$`beta[1]` * 1 +
posterior_samples$`beta[2]` * (110 - mean(kid$mom_iq))
# plotting the estimates of scores
density_data <- data.frame(
Scores = c(posterior_scores_hs0, posterior_scores_hs1),
Education = rep(c(0, 1), each = length(posterior_scores_hs0))
)
ggplot(density_data, aes(x = Scores, fill = Education)) +
geom_density(alpha = 0.5) +
labs(title = "Density Plots of Posterior Scores by Education (IQ = 110)",
x = "Scores", y = "Density") +
scale_fill_manual(values = c("blue", "red"))
# producing posterior samples
posterior_samples <- as.data.frame(fit3)
# producing posterior the estimates of scores by education
posterior_scores_hs0 <- posterior_samples$alpha + posterior_samples$`beta[1]` * 0 +
posterior_samples$`beta[2]` * (110 - mean(kid$mom_iq))
posterior_scores_hs1 <- posterior_samples$alpha + posterior_samples$`beta[1]` * 1 +
posterior_samples$`beta[2]` * (110 - mean(kid$mom_iq))
# plotting the estimates of scores
density_data <- data.frame(
Scores = c(posterior_scores_hs0, posterior_scores_hs1),
Education = rep(c("Education = 0", "Education = 1"), each = length(posterior_scores_hs0))
)
ggplot(density_data, aes(x = Scores, fill = Education)) +
geom_density(alpha = 0.5) +
labs(title = "Density Plots of Posterior Scores by Education (IQ = 110)",
x = "Scores", y = "Density") +
scale_fill_manual(values = c("blue", "red"))
# producing posterior samples
posterior_samples <- as.data.frame(fit3)
# producing posterior the estimates of scores by education
posterior_scores_hs0 <- posterior_samples$alpha + posterior_samples$`beta[1]` * 0 +
posterior_samples$`beta[2]` * (110 - mean(kid$mom_iq))
posterior_scores_hs1 <- posterior_samples$alpha + posterior_samples$`beta[1]` * 1 +
posterior_samples$`beta[2]` * (110 - mean(kid$mom_iq))
# plotting the estimates of scores
density_data <- data.frame(
Scores = c(posterior_scores_hs0, posterior_scores_hs1),
Education = rep(c("education = 0", "education = 1"), each = length(posterior_scores_hs0))
)
ggplot(density_data, aes(x = Scores, fill = Education)) +
geom_density(alpha = 0.5) +
labs(title = "Density Plots of Posterior Scores by Education (IQ = 110)",
x = "Scores", y = "Density") +
scale_fill_manual(values = c("blue", "red"))
extract(fit3)
post_sample <- extract(fit3)
dim(post_sample)
dim(post_sample[["alpha"]])
post_sample[["alpha"]][1:10]
head(posterior_samples[['alpha']],10)
head(post_sample)
post_sample$beta
# producing posterior samples
posterior_samples <- extract(fit3)
# producing posterior the estimates of scores by education
posterior_scores_hs0 <- posterior_samples[["alpha"]] + posterior_samples[["beta"]][,1] * 0 +
posterior_samples[["beta"]][,2] * (110 - mean(kid$mom_iq))
posterior_scores_hs1 <- posterior_samples[["alpha"]] + posterior_samples[["beta"]][,1] * 1 +
posterior_samples[["beta"]][,2] * (110 - mean(kid$mom_iq))
# plotting the estimates of scores
density_data <- data.frame(
Scores = c(posterior_scores_hs0, posterior_scores_hs1),
Education = rep(c("education = 0", "education = 1"), each = length(posterior_scores_hs0))
)
ggplot(density_data, aes(x = Scores, fill = Education)) +
geom_density(alpha = 0.5) +
labs(title = "Density Plots of Posterior Scores by Education (IQ = 110)",
x = "Scores", y = "Density") +
scale_fill_manual(values = c("blue", "red"))
posterior_samples[["beta"]]
posterior_samples[["beta"]][,1]
# producing posterior samples
posterior_samples <- extract(fit3)
# producing posterior the estimates of scores by education
posterior_scores_hs0 <- posterior_samples[["alpha"]] + posterior_samples[["beta"]][,1] * 0 +
posterior_samples[["beta"]][,2] * (110 - mean(kid$mom_iq))
posterior_scores_hs1 <- posterior_samples[["alpha"]] + posterior_samples[["beta"]][,1] * 1 +
posterior_samples[["beta"]][,2] * (110 - mean(kid$mom_iq))
# plotting the estimates of scores
density_data <- data.frame(
Scores = c(posterior_scores_hs0, posterior_scores_hs1),
Education = rep(c("education = 0", "education = 1"), each = length(posterior_scores_hs0))
)
ggplot(density_data, aes(x = Scores, fill = Education)) +
geom_density(alpha = 0.5) +
labs(title = "Density Plots of Posterior Scores by Education (IQ = 110)",
x = "Scores", y = "Density") +
scale_fill_manual(values = c("blue", "red"))
# producing posterior the estimates of scores
posterior_scores <- posterior_samples[["alpha"]] + posterior_samples[["beta"]][,1] * 1 +
posterior_samples[["beta"]][,2] * (95 - mean(kid$mom_iq)) + posterior_samples[["sigma"]]
# plotting the scores
hist(posterior_scores, main = "Posterior Predictive Distribution for a New Kid",
xlab = "Predicted Scores", col = "lightblue", border = "black")
# producing posterior the estimates of scores
posterior_scores <- posterior_samples[["alpha"]] + posterior_samples[["beta"]][,1] * 1 +
posterior_samples[["beta"]][,2] * (95 - mean(kid$mom_iq)) + posterior_samples[["sigma"]]
# plotting the scores
hist(posterior_scores, main = "Posterior Predictive Distribution for a New Kid",
xlab = "Predicted Scores", col = "lightblue")
# producing posterior the estimates of scores
posterior_scores <- posterior_samples[["alpha"]] + posterior_samples[["beta"]][,1] * 1 +
posterior_samples[["beta"]][,2] * (95 - mean(kid$mom_iq)) + posterior_samples[["sigma"]]
# plotting the scores
hist(posterior_scores, main = "Posterior Predictive Distribution for a New Kid",
xlab = "Predicted Scores")
